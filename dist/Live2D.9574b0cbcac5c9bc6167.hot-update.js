"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdatemagicalmirai2022"]("Live2D",{

/***/ "./src/Live2D/lappdelegate.ts":
/*!************************************!*\
  !*** ./src/Live2D/lappdelegate.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.LAppDelegate = exports.frameBuffer = exports.gl = exports.s_instance = exports.canvas = void 0;\r\nvar live2dcubismframework_1 = __webpack_require__(/*! @framework/live2dcubismframework */ \"./src/CubismSdk/Framework/src/live2dcubismframework.ts\");\r\nvar LAppDefine = __importStar(__webpack_require__(/*! ./lappdefine */ \"./src/Live2D/lappdefine.ts\"));\r\nvar lapplive2dmanager_1 = __webpack_require__(/*! ./lapplive2dmanager */ \"./src/Live2D/lapplive2dmanager.ts\");\r\nvar lapppal_1 = __webpack_require__(/*! ./lapppal */ \"./src/Live2D/lapppal.ts\");\r\nvar lapptexturemanager_1 = __webpack_require__(/*! ./lapptexturemanager */ \"./src/Live2D/lapptexturemanager.ts\");\r\nvar lappview_1 = __webpack_require__(/*! ./lappview */ \"./src/Live2D/lappview.ts\");\r\nexports.canvas = null;\r\nexports.s_instance = null;\r\nexports.gl = null;\r\nexports.frameBuffer = null;\r\nvar LAppDelegate = (function () {\r\n    function LAppDelegate() {\r\n        this._captured = false;\r\n        this._mouseX = 0.0;\r\n        this._mouseY = 0.0;\r\n        this._isEnd = false;\r\n        this._cubismOption = new live2dcubismframework_1.Option();\r\n        this._view = new lappview_1.LAppView();\r\n        this._textureManager = new lapptexturemanager_1.LAppTextureManager();\r\n    }\r\n    LAppDelegate.getInstance = function () {\r\n        if (exports.s_instance == null) {\r\n            exports.s_instance = new LAppDelegate();\r\n        }\r\n        return exports.s_instance;\r\n    };\r\n    LAppDelegate.releaseInstance = function () {\r\n        if (exports.s_instance != null) {\r\n            exports.s_instance.release();\r\n        }\r\n        exports.s_instance = null;\r\n    };\r\n    LAppDelegate.prototype.initialize = function () {\r\n        exports.canvas = document.querySelector('canvas');\r\n        if (LAppDefine.CanvasSize === 'auto') {\r\n            this._resizeCanvas();\r\n        }\r\n        else {\r\n            exports.canvas.width = LAppDefine.CanvasSize.width;\r\n            exports.canvas.height = LAppDefine.CanvasSize.height;\r\n        }\r\n        exports.gl = exports.canvas.getContext('webgl') || exports.canvas.getContext('experimental-webgl');\r\n        if (!exports.gl) {\r\n            alert('Cannot initialize WebGL. This browser does not support.');\r\n            exports.gl = null;\r\n            document.body.innerHTML =\r\n                'This browser does not support the <code>&lt;canvas&gt;</code> element.';\r\n            return false;\r\n        }\r\n        document.body.appendChild(exports.canvas);\r\n        if (!exports.frameBuffer) {\r\n            exports.frameBuffer = exports.gl.getParameter(exports.gl.FRAMEBUFFER_BINDING);\r\n        }\r\n        exports.gl.enable(exports.gl.BLEND);\r\n        exports.gl.blendFunc(exports.gl.SRC_ALPHA, exports.gl.ONE_MINUS_SRC_ALPHA);\r\n        var supportTouch = 'ontouchend' in exports.canvas;\r\n        if (supportTouch) {\r\n            exports.canvas.ontouchstart = onTouchBegan;\r\n            exports.canvas.ontouchmove = onTouchMoved;\r\n            exports.canvas.ontouchend = onTouchEnded;\r\n            exports.canvas.ontouchcancel = onTouchCancel;\r\n        }\r\n        else {\r\n            exports.canvas.onmousedown = onClickBegan;\r\n            exports.canvas.onmousemove = onMouseMoved;\r\n            exports.canvas.onmouseup = onClickEnded;\r\n        }\r\n        this._view.initialize();\r\n        this.initializeCubism();\r\n        return true;\r\n    };\r\n    LAppDelegate.prototype.onResize = function () {\r\n        this._resizeCanvas();\r\n        this._view.initialize();\r\n        this._view.initializeSprite();\r\n    };\r\n    LAppDelegate.prototype.release = function () {\r\n        this._textureManager.release();\r\n        this._textureManager = null;\r\n        this._view.release();\r\n        this._view = null;\r\n        lapplive2dmanager_1.LAppLive2DManager.releaseInstance();\r\n        live2dcubismframework_1.CubismFramework.dispose();\r\n    };\r\n    LAppDelegate.prototype.run = function () {\r\n        var _this = this;\r\n        var loop = function () {\r\n            if (exports.s_instance == null) {\r\n                return;\r\n            }\r\n            lapppal_1.LAppPal.updateTime();\r\n            exports.gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n            exports.gl.enable(exports.gl.DEPTH_TEST);\r\n            exports.gl.depthFunc(exports.gl.LEQUAL);\r\n            exports.gl.clear(exports.gl.COLOR_BUFFER_BIT | exports.gl.DEPTH_BUFFER_BIT);\r\n            exports.gl.clearDepth(1.0);\r\n            exports.gl.enable(exports.gl.BLEND);\r\n            exports.gl.blendFunc(exports.gl.SRC_ALPHA, exports.gl.ONE_MINUS_SRC_ALPHA);\r\n            _this._view.render();\r\n            requestAnimationFrame(loop);\r\n        };\r\n        loop();\r\n    };\r\n    LAppDelegate.prototype.createShader = function () {\r\n        var vertexShaderId = exports.gl.createShader(exports.gl.VERTEX_SHADER);\r\n        if (vertexShaderId == null) {\r\n            lapppal_1.LAppPal.printMessage('failed to create vertexShader');\r\n            return null;\r\n        }\r\n        var vertexShader = 'precision mediump float;' +\r\n            'attribute vec3 position;' +\r\n            'attribute vec2 uv;' +\r\n            'varying vec2 vuv;' +\r\n            'void main(void)' +\r\n            '{' +\r\n            '   gl_Position = vec4(position, 1.0);' +\r\n            '   vuv = uv;' +\r\n            '}';\r\n        exports.gl.shaderSource(vertexShaderId, vertexShader);\r\n        exports.gl.compileShader(vertexShaderId);\r\n        var fragmentShaderId = exports.gl.createShader(exports.gl.FRAGMENT_SHADER);\r\n        if (fragmentShaderId == null) {\r\n            lapppal_1.LAppPal.printMessage('failed to create fragmentShader');\r\n            return null;\r\n        }\r\n        var fragmentShader = 'precision mediump float;' +\r\n            'varying vec2 vuv;' +\r\n            'uniform sampler2D texture;' +\r\n            'void main(void)' +\r\n            '{' +\r\n            '   gl_FragColor = texture2D(texture, vuv);' +\r\n            '}';\r\n        exports.gl.shaderSource(fragmentShaderId, fragmentShader);\r\n        exports.gl.compileShader(fragmentShaderId);\r\n        var programId = exports.gl.createProgram();\r\n        exports.gl.attachShader(programId, vertexShaderId);\r\n        exports.gl.attachShader(programId, fragmentShaderId);\r\n        exports.gl.deleteShader(vertexShaderId);\r\n        exports.gl.deleteShader(fragmentShaderId);\r\n        exports.gl.linkProgram(programId);\r\n        exports.gl.useProgram(programId);\r\n        return programId;\r\n    };\r\n    LAppDelegate.prototype.getView = function () {\r\n        return this._view;\r\n    };\r\n    LAppDelegate.prototype.getTextureManager = function () {\r\n        return this._textureManager;\r\n    };\r\n    LAppDelegate.prototype.initializeCubism = function () {\r\n        this._cubismOption.logFunction = lapppal_1.LAppPal.printMessage;\r\n        this._cubismOption.loggingLevel = LAppDefine.CubismLoggingLevel;\r\n        live2dcubismframework_1.CubismFramework.startUp(this._cubismOption);\r\n        live2dcubismframework_1.CubismFramework.initialize();\r\n        lapplive2dmanager_1.LAppLive2DManager.getInstance();\r\n        lapppal_1.LAppPal.updateTime();\r\n        this._view.initializeSprite();\r\n    };\r\n    LAppDelegate.prototype._resizeCanvas = function () {\r\n        exports.canvas.width = window.innerWidth;\r\n        exports.canvas.height = window.innerHeight;\r\n    };\r\n    return LAppDelegate;\r\n}());\r\nexports.LAppDelegate = LAppDelegate;\r\nfunction onClickBegan(e) {\r\n    if (!LAppDelegate.getInstance()._view) {\r\n        lapppal_1.LAppPal.printMessage('view notfound');\r\n        return;\r\n    }\r\n    LAppDelegate.getInstance()._captured = true;\r\n    var posX = e.pageX;\r\n    var posY = e.pageY;\r\n    LAppDelegate.getInstance()._view.onTouchesBegan(posX, posY);\r\n}\r\nfunction onMouseMoved(e) {\r\n    if (!LAppDelegate.getInstance()._captured) {\r\n        return;\r\n    }\r\n    if (!LAppDelegate.getInstance()._view) {\r\n        lapppal_1.LAppPal.printMessage('view notfound');\r\n        return;\r\n    }\r\n    var rect = e.target.getBoundingClientRect();\r\n    var posX = e.clientX - rect.left;\r\n    var posY = e.clientY - rect.top;\r\n    LAppDelegate.getInstance()._view.onTouchesMoved(posX, posY);\r\n}\r\nfunction onClickEnded(e) {\r\n    LAppDelegate.getInstance()._captured = false;\r\n    if (!LAppDelegate.getInstance()._view) {\r\n        lapppal_1.LAppPal.printMessage('view notfound');\r\n        return;\r\n    }\r\n    var rect = e.target.getBoundingClientRect();\r\n    var posX = e.clientX - rect.left;\r\n    var posY = e.clientY - rect.top;\r\n    LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\r\n}\r\nfunction onTouchBegan(e) {\r\n    if (!LAppDelegate.getInstance()._view) {\r\n        lapppal_1.LAppPal.printMessage('view notfound');\r\n        return;\r\n    }\r\n    LAppDelegate.getInstance()._captured = true;\r\n    var posX = e.changedTouches[0].pageX;\r\n    var posY = e.changedTouches[0].pageY;\r\n    LAppDelegate.getInstance()._view.onTouchesBegan(posX, posY);\r\n}\r\nfunction onTouchMoved(e) {\r\n    if (!LAppDelegate.getInstance()._captured) {\r\n        return;\r\n    }\r\n    if (!LAppDelegate.getInstance()._view) {\r\n        lapppal_1.LAppPal.printMessage('view notfound');\r\n        return;\r\n    }\r\n    var rect = e.target.getBoundingClientRect();\r\n    var posX = e.changedTouches[0].clientX - rect.left;\r\n    var posY = e.changedTouches[0].clientY - rect.top;\r\n    LAppDelegate.getInstance()._view.onTouchesMoved(posX, posY);\r\n}\r\nfunction onTouchEnded(e) {\r\n    LAppDelegate.getInstance()._captured = false;\r\n    if (!LAppDelegate.getInstance()._view) {\r\n        lapppal_1.LAppPal.printMessage('view notfound');\r\n        return;\r\n    }\r\n    var rect = e.target.getBoundingClientRect();\r\n    var posX = e.changedTouches[0].clientX - rect.left;\r\n    var posY = e.changedTouches[0].clientY - rect.top;\r\n    LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\r\n}\r\nfunction onTouchCancel(e) {\r\n    LAppDelegate.getInstance()._captured = false;\r\n    if (!LAppDelegate.getInstance()._view) {\r\n        lapppal_1.LAppPal.printMessage('view notfound');\r\n        return;\r\n    }\r\n    var rect = e.target.getBoundingClientRect();\r\n    var posX = e.changedTouches[0].clientX - rect.left;\r\n    var posY = e.changedTouches[0].clientY - rect.top;\r\n    LAppDelegate.getInstance()._view.onTouchesEnded(posX, posY);\r\n}\r\n\n\n//# sourceURL=webpack://magicalmirai2022/./src/Live2D/lappdelegate.ts?");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ !function() {
/******/ 	__webpack_require__.h = function() { return "a7f1ac2b70efcfb84160"; }
/******/ }();
/******/ 
/******/ }
);